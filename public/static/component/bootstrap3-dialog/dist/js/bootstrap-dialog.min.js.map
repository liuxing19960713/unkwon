{"version":3,"sources":["public/static/component/bootstrap3-dialog/dist/js/bootstrap-dialog.js"],"names":["root","factory","module","exports","require","define","amd","$","BootstrapDialog","jQuery","this","Modal","fn","modal","Constructor","BootstrapDialogModal","element","options","call","getModalVersion","VERSION","test","ORIGINAL_BODY_PADDING","parseInt","css","METHODS_TO_OVERRIDE","hide","e","preventDefault","Event","$element","trigger","isShown","isDefaultPrevented","getGlobalOpenedDialogs","length","$body","removeClass","resetScrollbar","escape","document","off","attr","support","transition","hasClass","one","proxy","hideModal","emulateTransitionEnd","setScrollbar","bodyPad","bodyIsOverflowing","scrollbarWidth","backdrop","resetAdjustments","extend","prototype","constructor","openedDialogs","each","dialogs","id","dialogInstance","isRealized","isOpened","push","defaultOptions","newGuid","buttons","data","onshow","onshown","onhide","onhidden","indexedButtons","registeredButtonHotkeys","draggableData","isMouseDown","mouseOffset","realized","opened","initOptions","holdThisInstance","NAMESPACE","TYPE_DEFAULT","TYPE_INFO","TYPE_PRIMARY","TYPE_SUCCESS","TYPE_WARNING","TYPE_DANGER","DEFAULT_TEXTS","SIZE_NORMAL","SIZE_SMALL","SIZE_WIDE","SIZE_LARGE","BUTTON_SIZES","ICON_SPINNER","BUTTONS_ORDER_CANCEL_OK","BUTTONS_ORDER_OK_CANCEL","type","size","cssClass","title","message","nl2br","closable","closeByBackdrop","closeByKeyboard","closeIcon","spinicon","autodestroy","draggable","animate","description","tabindex","btnsOrder","configDefaultOptions","openAll","open","closeAll","close","getDialog","dialog","setDialog","getId","addDialog","moveFocus","lastDialogInstance","getModal","focus","handleModalBackdropEvent","on","event","target","isClosable","canCloseByBackdrop","updateZIndex","dialogCount","dialogId","$modal","$backdrop","realize","initModalStuff","setModal","createModal","setModalDialog","createModalDialog","setModalContent","createModalContent","setModalHeader","createModalHeader","setModalBody","createModalBody","setModalFooter","createModalFooter","append","getModalDialog","getModalContent","getModalHeader","getModalBody","getModalFooter","prop","$modalDialog","$modalContent","$modalHeader","$modalBody","$modalFooter","createDynamicContent","rawContent","content","formatStringContent","replace","setData","key","value","getData","setId","getType","setType","updateType","types","join","addClass","getSize","setSize","updateSize","index","button","$button","getButton","buttonSizes","sizeClassSpecified","btnClasses","split","btnClass","inArray","getButtonSize","getCssClass","setCssClass","getTitle","setTitle","updateTitle","getDefaultText","find","getNamespace","html","getMessage","setMessage","updateMessage","setClosable","updateClosable","setCloseByBackdrop","setCloseByKeyboard","canCloseByKeyboard","isAnimate","setAnimate","updateAnimate","toggleClass","getSpinicon","setSpinicon","addButton","addButtons","that","getButtons","setButtons","updateButtons","show","createFooterButtons","isAutodestroy","setAutodestroy","getDescription","setDescription","setTabindex","getTabindex","updateTabindex","name","createHeaderContent","$container","createTitleContent","prepend","createCloseButton","$title","$icon","createBodyContent","createMessageContent","$message","createFooterContent","createButton","icon","trim","createButtonIcon","label","hotkey","autospin","toggleSpin","action","enhanceButton","enabled","toggleEnable","enable","$this","disable","spin","remove","stopSpin","enableButtons","toggle","onShow","onShown","onHide","onHidden","setRealized","setOpened","handleModalEvents","isModalEvent","openIt","hideIt","which","namespace","makeModalDraggable","dialogOffset","offset","top","clientY","left","clientX","keyboard","c","r","Math","random","toString","alert","alertOptions","defaultAlertOptions","buttonLabel","OK","buttonHotkey","callback","arguments","bind","confirm","confirmOptions","defaultConfirmOptions","btnCancelLabel","CANCEL","btnCancelClass","btnCancelHotkey","btnOKLabel","btnOKClass","btnOKHotkey","reverse","warning","danger","success"],"mappings":"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","file":"bootstrap-dialog.min.js","sourcesContent":["/* global define */\n\n/* ================================================\n * Make use of Bootstrap's modal more monkey-friendly.\n *\n * For Bootstrap 3.\n *\n * javanoob@hotmail.com\n *\n * https://github.com/nakupanda/bootstrap3-dialog\n *\n * Licensed under The MIT License.\n * ================================================ */\n(function (root, factory) {\n\n    \"use strict\";\n\n    // CommonJS module is defined\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory(require('jquery'), require('bootstrap'));\n    }\n    // AMD module is defined\n    else if (typeof define === \"function\" && define.amd) {\n        define(\"bootstrap-dialog\", [\"jquery\", \"bootstrap\"], function ($) {\n            return factory($);\n        });\n    } else {\n        // planted over the root!\n        root.BootstrapDialog = factory(root.jQuery);\n    }\n\n}(this, function ($) {\n\n    \"use strict\";\n\n    /* ================================================\n     * Definition of BootstrapDialogModal.\n     * Extend Bootstrap Modal and override some functions.\n     * BootstrapDialogModal === Modified Modal.\n     * ================================================ */\n    var Modal = $.fn.modal.Constructor;\n    var BootstrapDialogModal = function (element, options) {\n        Modal.call(this, element, options);\n    };\n    BootstrapDialogModal.getModalVersion = function () {\n        var version = null;\n        if (typeof $.fn.modal.Constructor.VERSION === 'undefined') {\n            version = 'v3.1';\n        } else if (/3\\.2\\.\\d+/.test($.fn.modal.Constructor.VERSION)) {\n            version = 'v3.2';\n        } else if (/3\\.3\\.[1,2]/.test($.fn.modal.Constructor.VERSION)) {\n            version = 'v3.3';  // v3.3.1, v3.3.2\n        } else {\n            version = 'v3.3.4';\n        }\n\n        return version;\n    };\n    BootstrapDialogModal.ORIGINAL_BODY_PADDING = parseInt(($('body').css('padding-right') || 0), 10);\n    BootstrapDialogModal.METHODS_TO_OVERRIDE = {};\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.1'] = {};\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.2'] = {\n        hide: function (e) {\n            if (e) {\n                e.preventDefault();\n            }\n            e = $.Event('hide.bs.modal');\n\n            this.$element.trigger(e);\n\n            if (!this.isShown || e.isDefaultPrevented()) {\n                return;\n            }\n\n            this.isShown = false;\n\n            // Remove css class 'modal-open' when the last opened dialog is closing.\n            var openedDialogs = this.getGlobalOpenedDialogs();\n            if (openedDialogs.length === 0) {\n                this.$body.removeClass('modal-open');\n            }\n\n            this.resetScrollbar();\n            this.escape();\n\n            $(document).off('focusin.bs.modal');\n\n            this.$element\n            .removeClass('in')\n            .attr('aria-hidden', true)\n            .off('click.dismiss.bs.modal');\n\n            $.support.transition && this.$element.hasClass('fade') ?\n            this.$element\n            .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n            .emulateTransitionEnd(300) :\n            this.hideModal();\n        }\n    };\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.3'] = {\n        /**\n         * Overrided.\n         * \n         * @returns {undefined}\n         */\n        setScrollbar: function () {\n            var bodyPad = BootstrapDialogModal.ORIGINAL_BODY_PADDING;\n            if (this.bodyIsOverflowing) {\n                this.$body.css('padding-right', bodyPad + this.scrollbarWidth);\n            }\n        },\n        /**\n         * Overrided.\n         * \n         * @returns {undefined}\n         */\n        resetScrollbar: function () {\n            var openedDialogs = this.getGlobalOpenedDialogs();\n            if (openedDialogs.length === 0) {\n                this.$body.css('padding-right', BootstrapDialogModal.ORIGINAL_BODY_PADDING);\n            }\n        },\n        /**\n         * Overrided.\n         * \n         * @returns {undefined}\n         */\n        hideModal: function () {\n            this.$element.hide();\n            this.backdrop($.proxy(function () {\n                var openedDialogs = this.getGlobalOpenedDialogs();\n                if (openedDialogs.length === 0) {\n                    this.$body.removeClass('modal-open');\n                }\n                this.resetAdjustments();\n                this.resetScrollbar();\n                this.$element.trigger('hidden.bs.modal');\n            }, this));\n        }\n    };\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.3.4'] = $.extend({}, BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.3']);\n    BootstrapDialogModal.prototype = {\n        constructor: BootstrapDialogModal,\n        /**\n         * New function, to get the dialogs that opened by BootstrapDialog.\n         * \n         * @returns {undefined}\n         */\n        getGlobalOpenedDialogs: function () {\n            var openedDialogs = [];\n            $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n                if (dialogInstance.isRealized() && dialogInstance.isOpened()) {\n                    openedDialogs.push(dialogInstance);\n                }\n            });\n\n            return openedDialogs;\n        }\n    };\n\n    // Add compatible methods.\n    BootstrapDialogModal.prototype = $.extend(BootstrapDialogModal.prototype, Modal.prototype, BootstrapDialogModal.METHODS_TO_OVERRIDE[BootstrapDialogModal.getModalVersion()]);\n\n    /* ================================================\n     * Definition of BootstrapDialog.\n     * ================================================ */\n    var BootstrapDialog = function (options) {\n        this.defaultOptions = $.extend(true, {\n            id: BootstrapDialog.newGuid(),\n            buttons: [],\n            data: {},\n            onshow: null,\n            onshown: null,\n            onhide: null,\n            onhidden: null\n        }, BootstrapDialog.defaultOptions);\n        this.indexedButtons = {};\n        this.registeredButtonHotkeys = {};\n        this.draggableData = {\n            isMouseDown: false,\n            mouseOffset: {}\n        };\n        this.realized = false;\n        this.opened = false;\n        this.initOptions(options);\n        this.holdThisInstance();\n    };\n\n    BootstrapDialog.BootstrapDialogModal = BootstrapDialogModal;\n\n    /**\n     *  Some constants.\n     */\n    BootstrapDialog.NAMESPACE = 'bootstrap-dialog';\n    BootstrapDialog.TYPE_DEFAULT = 'type-default';\n    BootstrapDialog.TYPE_INFO = 'type-info';\n    BootstrapDialog.TYPE_PRIMARY = 'type-primary';\n    BootstrapDialog.TYPE_SUCCESS = 'type-success';\n    BootstrapDialog.TYPE_WARNING = 'type-warning';\n    BootstrapDialog.TYPE_DANGER = 'type-danger';\n    BootstrapDialog.DEFAULT_TEXTS = {};\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_DEFAULT] = 'Information';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_INFO] = 'Information';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_PRIMARY] = 'Information';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_SUCCESS] = 'Success';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_WARNING] = 'Warning';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_DANGER] = 'Danger';\n    BootstrapDialog.DEFAULT_TEXTS['OK'] = 'OK';\n    BootstrapDialog.DEFAULT_TEXTS['CANCEL'] = 'Cancel';\n    BootstrapDialog.DEFAULT_TEXTS['CONFIRM'] = 'Confirmation';\n    BootstrapDialog.SIZE_NORMAL = 'size-normal';\n    BootstrapDialog.SIZE_SMALL = 'size-small';\n    BootstrapDialog.SIZE_WIDE = 'size-wide';    // size-wide is equal to modal-lg\n    BootstrapDialog.SIZE_LARGE = 'size-large';\n    BootstrapDialog.BUTTON_SIZES = {};\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_NORMAL] = '';\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_SMALL] = '';\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_WIDE] = '';\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_LARGE] = 'btn-lg';\n    BootstrapDialog.ICON_SPINNER = 'glyphicon glyphicon-asterisk';\n    BootstrapDialog.BUTTONS_ORDER_CANCEL_OK = 'btns-order-cancel-ok';\n    BootstrapDialog.BUTTONS_ORDER_OK_CANCEL = 'btns-order-ok-cancel';\n\n    /**\n     * Default options.\n     */\n    BootstrapDialog.defaultOptions = {\n        type: BootstrapDialog.TYPE_PRIMARY,\n        size: BootstrapDialog.SIZE_NORMAL,\n        cssClass: '',\n        title: null,\n        message: null,\n        nl2br: true,\n        closable: true,\n        closeByBackdrop: true,\n        closeByKeyboard: true,\n        closeIcon: '&#215;',\n        spinicon: BootstrapDialog.ICON_SPINNER,\n        autodestroy: true,\n        draggable: false,\n        animate: true,\n        description: '',\n        tabindex: -1,\n        btnsOrder: BootstrapDialog.BUTTONS_ORDER_CANCEL_OK\n    };\n\n    /**\n     * Config default options.\n     */\n    BootstrapDialog.configDefaultOptions = function (options) {\n        BootstrapDialog.defaultOptions = $.extend(true, BootstrapDialog.defaultOptions, options);\n    };\n\n    /**\n     * Open / Close all created dialogs all at once.\n     */\n    BootstrapDialog.dialogs = {};\n    BootstrapDialog.openAll = function () {\n        $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n            dialogInstance.open();\n        });\n    };\n    BootstrapDialog.closeAll = function () {\n        $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n            dialogInstance.close();\n        });\n    };\n\n    /**\n     * Get dialog instance by given id.\n     * \n     * @returns dialog instance\n     */\n    BootstrapDialog.getDialog = function (id) {\n        var dialog = null;\n        if (typeof BootstrapDialog.dialogs[id] !== 'undefined') {\n            dialog = BootstrapDialog.dialogs[id];\n        }\n\n        return dialog;\n    };\n\n    /**\n     * Set a dialog.\n     * \n     * @returns the dialog that has just been set.\n     */\n    BootstrapDialog.setDialog = function (dialog) {\n        BootstrapDialog.dialogs[dialog.getId()] = dialog;\n\n        return dialog;\n    };\n\n    /**\n     * Alias of BootstrapDialog.setDialog(dialog)\n     * \n     * @param {type} dialog\n     * @returns {unresolved}\n     */\n    BootstrapDialog.addDialog = function (dialog) {\n        return BootstrapDialog.setDialog(dialog);\n    };\n\n    /**\n     * Move focus to next visible dialog.\n     */\n    BootstrapDialog.moveFocus = function () {\n        var lastDialogInstance = null;\n        $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n            if (dialogInstance.isRealized() && dialogInstance.isOpened()) {\n                lastDialogInstance = dialogInstance;\n            }\n        });\n        if (lastDialogInstance !== null) {\n            lastDialogInstance.getModal().focus();\n        }\n    };\n\n    BootstrapDialog.METHODS_TO_OVERRIDE = {};\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.1'] = {\n        handleModalBackdropEvent: function () {\n            this.getModal().on('click', {dialog: this}, function (event) {\n                event.target === this && event.data.dialog.isClosable() && event.data.dialog.canCloseByBackdrop() && event.data.dialog.close();\n            });\n\n            return this;\n        },\n        /**\n         * To make multiple opened dialogs look better.\n         * \n         * Will be removed in later version, after Bootstrap Modal >= 3.3.0, updating z-index is unnecessary.\n         */\n        updateZIndex: function () {\n            if (this.isOpened()) {\n                var zIndexBackdrop = 1040;\n                var zIndexModal = 1050;\n                var dialogCount = 0;\n                $.each(BootstrapDialog.dialogs, function (dialogId, dialogInstance) {\n                    if (dialogInstance.isRealized() && dialogInstance.isOpened()) {\n                        dialogCount++;\n                    }\n                });\n                var $modal = this.getModal();\n                var $backdrop = $modal.data('bs.modal').$backdrop;\n                $modal.css('z-index', zIndexModal + (dialogCount - 1) * 20);\n                $backdrop.css('z-index', zIndexBackdrop + (dialogCount - 1) * 20);\n            }\n\n            return this;\n        },\n        open: function () {\n            !this.isRealized() && this.realize();\n            this.getModal().modal('show');\n            this.updateZIndex();\n\n            return this;\n        }\n    };\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.2'] = {\n        handleModalBackdropEvent: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['handleModalBackdropEvent'],\n        updateZIndex: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['updateZIndex'],\n        open: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['open']\n    };\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.3'] = {};\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.3.4'] = $.extend({}, BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']);\n    BootstrapDialog.prototype = {\n        constructor: BootstrapDialog,\n        initOptions: function (options) {\n            this.options = $.extend(true, this.defaultOptions, options);\n\n            return this;\n        },\n        holdThisInstance: function () {\n            BootstrapDialog.addDialog(this);\n\n            return this;\n        },\n        initModalStuff: function () {\n            this.setModal(this.createModal())\n            .setModalDialog(this.createModalDialog())\n            .setModalContent(this.createModalContent())\n            .setModalHeader(this.createModalHeader())\n            .setModalBody(this.createModalBody())\n            .setModalFooter(this.createModalFooter());\n\n            this.getModal().append(this.getModalDialog());\n            this.getModalDialog().append(this.getModalContent());\n            this.getModalContent()\n            .append(this.getModalHeader())\n            .append(this.getModalBody())\n            .append(this.getModalFooter());\n\n            return this;\n        },\n        createModal: function () {\n            var $modal = $('<div class=\"modal\" role=\"dialog\" aria-hidden=\"true\"></div>');\n            $modal.prop('id', this.getId());\n            $modal.attr('aria-labelledby', this.getId() + '_title');\n\n            return $modal;\n        },\n        getModal: function () {\n            return this.$modal;\n        },\n        setModal: function ($modal) {\n            this.$modal = $modal;\n\n            return this;\n        },\n        createModalDialog: function () {\n            return $('<div class=\"modal-dialog\"></div>');\n        },\n        getModalDialog: function () {\n            return this.$modalDialog;\n        },\n        setModalDialog: function ($modalDialog) {\n            this.$modalDialog = $modalDialog;\n\n            return this;\n        },\n        createModalContent: function () {\n            return $('<div class=\"modal-content\"></div>');\n        },\n        getModalContent: function () {\n            return this.$modalContent;\n        },\n        setModalContent: function ($modalContent) {\n            this.$modalContent = $modalContent;\n\n            return this;\n        },\n        createModalHeader: function () {\n            return $('<div class=\"modal-header\"></div>');\n        },\n        getModalHeader: function () {\n            return this.$modalHeader;\n        },\n        setModalHeader: function ($modalHeader) {\n            this.$modalHeader = $modalHeader;\n\n            return this;\n        },\n        createModalBody: function () {\n            return $('<div class=\"modal-body\"></div>');\n        },\n        getModalBody: function () {\n            return this.$modalBody;\n        },\n        setModalBody: function ($modalBody) {\n            this.$modalBody = $modalBody;\n\n            return this;\n        },\n        createModalFooter: function () {\n            return $('<div class=\"modal-footer\"></div>');\n        },\n        getModalFooter: function () {\n            return this.$modalFooter;\n        },\n        setModalFooter: function ($modalFooter) {\n            this.$modalFooter = $modalFooter;\n\n            return this;\n        },\n        createDynamicContent: function (rawContent) {\n            var content = null;\n            if (typeof rawContent === 'function') {\n                content = rawContent.call(rawContent, this);\n            } else {\n                content = rawContent;\n            }\n            if (typeof content === 'string') {\n                content = this.formatStringContent(content);\n            }\n\n            return content;\n        },\n        formatStringContent: function (content) {\n            if (this.options.nl2br) {\n                return content.replace(/\\r\\n/g, '<br />').replace(/[\\r\\n]/g, '<br />');\n            }\n\n            return content;\n        },\n        setData: function (key, value) {\n            this.options.data[key] = value;\n\n            return this;\n        },\n        getData: function (key) {\n            return this.options.data[key];\n        },\n        setId: function (id) {\n            this.options.id = id;\n\n            return this;\n        },\n        getId: function () {\n            return this.options.id;\n        },\n        getType: function () {\n            return this.options.type;\n        },\n        setType: function (type) {\n            this.options.type = type;\n            this.updateType();\n\n            return this;\n        },\n        updateType: function () {\n            if (this.isRealized()) {\n                var types = [BootstrapDialog.TYPE_DEFAULT,\n                    BootstrapDialog.TYPE_INFO,\n                    BootstrapDialog.TYPE_PRIMARY,\n                    BootstrapDialog.TYPE_SUCCESS,\n                    BootstrapDialog.TYPE_WARNING,\n                    BootstrapDialog.TYPE_DANGER];\n\n                this.getModal().removeClass(types.join(' ')).addClass(this.getType());\n            }\n\n            return this;\n        },\n        getSize: function () {\n            return this.options.size;\n        },\n        setSize: function (size) {\n            this.options.size = size;\n            this.updateSize();\n\n            return this;\n        },\n        updateSize: function () {\n            if (this.isRealized()) {\n                var dialog = this;\n\n                // Dialog size\n                this.getModal().removeClass(BootstrapDialog.SIZE_NORMAL)\n                .removeClass(BootstrapDialog.SIZE_SMALL)\n                .removeClass(BootstrapDialog.SIZE_WIDE)\n                .removeClass(BootstrapDialog.SIZE_LARGE);\n                this.getModal().addClass(this.getSize());\n\n                // Smaller dialog.\n                this.getModalDialog().removeClass('modal-sm');\n                if (this.getSize() === BootstrapDialog.SIZE_SMALL) {\n                    this.getModalDialog().addClass('modal-sm');\n                }\n\n                // Wider dialog.\n                this.getModalDialog().removeClass('modal-lg');\n                if (this.getSize() === BootstrapDialog.SIZE_WIDE) {\n                    this.getModalDialog().addClass('modal-lg');\n                }\n\n                // Button size\n                $.each(this.options.buttons, function (index, button) {\n                    var $button = dialog.getButton(button.id);\n                    var buttonSizes = ['btn-lg', 'btn-sm', 'btn-xs'];\n                    var sizeClassSpecified = false;\n                    if (typeof button['cssClass'] === 'string') {\n                        var btnClasses = button['cssClass'].split(' ');\n                        $.each(btnClasses, function (index, btnClass) {\n                            if ($.inArray(btnClass, buttonSizes) !== -1) {\n                                sizeClassSpecified = true;\n                            }\n                        });\n                    }\n                    if (!sizeClassSpecified) {\n                        $button.removeClass(buttonSizes.join(' '));\n                        $button.addClass(dialog.getButtonSize());\n                    }\n                });\n            }\n\n            return this;\n        },\n        getCssClass: function () {\n            return this.options.cssClass;\n        },\n        setCssClass: function (cssClass) {\n            this.options.cssClass = cssClass;\n\n            return this;\n        },\n        getTitle: function () {\n            return this.options.title;\n        },\n        setTitle: function (title) {\n            this.options.title = title;\n            this.updateTitle();\n\n            return this;\n        },\n        updateTitle: function () {\n            if (this.isRealized()) {\n                var title = this.getTitle() !== null ? this.createDynamicContent(this.getTitle()) : this.getDefaultText();\n                this.getModalHeader().find('.' + this.getNamespace('title')).html('').append(title).prop('id', this.getId() + '_title');\n            }\n\n            return this;\n        },\n        getMessage: function () {\n            return this.options.message;\n        },\n        setMessage: function (message) {\n            this.options.message = message;\n            this.updateMessage();\n\n            return this;\n        },\n        updateMessage: function () {\n            if (this.isRealized()) {\n                var message = this.createDynamicContent(this.getMessage());\n                this.getModalBody().find('.' + this.getNamespace('message')).html('').append(message);\n            }\n\n            return this;\n        },\n        isClosable: function () {\n            return this.options.closable;\n        },\n        setClosable: function (closable) {\n            this.options.closable = closable;\n            this.updateClosable();\n\n            return this;\n        },\n        setCloseByBackdrop: function (closeByBackdrop) {\n            this.options.closeByBackdrop = closeByBackdrop;\n\n            return this;\n        },\n        canCloseByBackdrop: function () {\n            return this.options.closeByBackdrop;\n        },\n        setCloseByKeyboard: function (closeByKeyboard) {\n            this.options.closeByKeyboard = closeByKeyboard;\n\n            return this;\n        },\n        canCloseByKeyboard: function () {\n            return this.options.closeByKeyboard;\n        },\n        isAnimate: function () {\n            return this.options.animate;\n        },\n        setAnimate: function (animate) {\n            this.options.animate = animate;\n\n            return this;\n        },\n        updateAnimate: function () {\n            if (this.isRealized()) {\n                this.getModal().toggleClass('fade', this.isAnimate());\n            }\n\n            return this;\n        },\n        getSpinicon: function () {\n            return this.options.spinicon;\n        },\n        setSpinicon: function (spinicon) {\n            this.options.spinicon = spinicon;\n\n            return this;\n        },\n        addButton: function (button) {\n            this.options.buttons.push(button);\n\n            return this;\n        },\n        addButtons: function (buttons) {\n            var that = this;\n            $.each(buttons, function (index, button) {\n                that.addButton(button);\n            });\n\n            return this;\n        },\n        getButtons: function () {\n            return this.options.buttons;\n        },\n        setButtons: function (buttons) {\n            this.options.buttons = buttons;\n            this.updateButtons();\n\n            return this;\n        },\n        /**\n         * If there is id provided for a button option, it will be in dialog.indexedButtons list.\n         *\n         * In that case you can use dialog.getButton(id) to find the button.\n         *\n         * @param {type} id\n         * @returns {undefined}\n         */\n        getButton: function (id) {\n            if (typeof this.indexedButtons[id] !== 'undefined') {\n                return this.indexedButtons[id];\n            }\n\n            return null;\n        },\n        getButtonSize: function () {\n            if (typeof BootstrapDialog.BUTTON_SIZES[this.getSize()] !== 'undefined') {\n                return BootstrapDialog.BUTTON_SIZES[this.getSize()];\n            }\n\n            return '';\n        },\n        updateButtons: function () {\n            if (this.isRealized()) {\n                if (this.getButtons().length === 0) {\n                    this.getModalFooter().hide();\n                } else {\n                    this.getModalFooter().show().find('.' + this.getNamespace('footer')).html('').append(this.createFooterButtons());\n                }\n            }\n\n            return this;\n        },\n        isAutodestroy: function () {\n            return this.options.autodestroy;\n        },\n        setAutodestroy: function (autodestroy) {\n            this.options.autodestroy = autodestroy;\n        },\n        getDescription: function () {\n            return this.options.description;\n        },\n        setDescription: function (description) {\n            this.options.description = description;\n\n            return this;\n        },\n        setTabindex: function (tabindex) {\n            this.options.tabindex = tabindex;\n\n            return this;\n        },\n        getTabindex: function () {\n            return this.options.tabindex;\n        },\n        updateTabindex: function () {\n            if (this.isRealized()) {\n                this.getModal().attr('tabindex', this.getTabindex());\n            }\n\n            return this;\n        },\n        getDefaultText: function () {\n            return BootstrapDialog.DEFAULT_TEXTS[this.getType()];\n        },\n        getNamespace: function (name) {\n            return BootstrapDialog.NAMESPACE + '-' + name;\n        },\n        createHeaderContent: function () {\n            var $container = $('<div></div>');\n            $container.addClass(this.getNamespace('header'));\n\n            // title\n            $container.append(this.createTitleContent());\n\n            // Close button\n            $container.prepend(this.createCloseButton());\n\n            return $container;\n        },\n        createTitleContent: function () {\n            var $title = $('<div></div>');\n            $title.addClass(this.getNamespace('title'));\n\n            return $title;\n        },\n        createCloseButton: function () {\n            var $container = $('<div></div>');\n            $container.addClass(this.getNamespace('close-button'));\n            var $icon = $('<button class=\"close\" aria-label=\"close\"></button>');\n            $icon.append(this.options.closeIcon);\n            $container.append($icon);\n            $container.on('click', {dialog: this}, function (event) {\n                event.data.dialog.close();\n            });\n\n            return $container;\n        },\n        createBodyContent: function () {\n            var $container = $('<div></div>');\n            $container.addClass(this.getNamespace('body'));\n\n            // Message\n            $container.append(this.createMessageContent());\n\n            return $container;\n        },\n        createMessageContent: function () {\n            var $message = $('<div></div>');\n            $message.addClass(this.getNamespace('message'));\n\n            return $message;\n        },\n        createFooterContent: function () {\n            var $container = $('<div></div>');\n            $container.addClass(this.getNamespace('footer'));\n\n            return $container;\n        },\n        createFooterButtons: function () {\n            var that = this;\n            var $container = $('<div></div>');\n            $container.addClass(this.getNamespace('footer-buttons'));\n            this.indexedButtons = {};\n            $.each(this.options.buttons, function (index, button) {\n                if (!button.id) {\n                    button.id = BootstrapDialog.newGuid();\n                }\n                var $button = that.createButton(button);\n                that.indexedButtons[button.id] = $button;\n                $container.append($button);\n            });\n\n            return $container;\n        },\n        createButton: function (button) {\n            var $button = $('<button class=\"btn\"></button>');\n            $button.prop('id', button.id);\n            $button.data('button', button);\n\n            // Icon\n            if (typeof button.icon !== 'undefined' && $.trim(button.icon) !== '') {\n                $button.append(this.createButtonIcon(button.icon));\n            }\n\n            // Label\n            if (typeof button.label !== 'undefined') {\n                $button.append(button.label);\n            }\n\n            // title\n            if (typeof button.title !== 'undefined') {\n                $button.attr('title',  button.title);\n            }\n\n            // Css class\n            if (typeof button.cssClass !== 'undefined' && $.trim(button.cssClass) !== '') {\n                $button.addClass(button.cssClass);\n            } else {\n                $button.addClass('btn-default');\n            }\n\n            // Data attributes\n            if (typeof button.data === 'object' && button.data.constructor === {}.constructor) {\n                $.each(button.data, function (key, value) {\n                    $button.attr('data-' + key, value);\n                });\n            }\n\n            // Hotkey\n            if (typeof button.hotkey !== 'undefined') {\n                this.registeredButtonHotkeys[button.hotkey] = $button;\n            }\n\n            // Button on click\n            $button.on('click', {dialog: this, $button: $button, button: button}, function (event) {\n                var dialog = event.data.dialog;\n                var $button = event.data.$button;\n                var button = $button.data('button');\n                if (button.autospin) {\n                    $button.toggleSpin(true);\n                }\n                if (typeof button.action === 'function') {\n                    return button.action.call($button, dialog, event);\n                }\n            });\n\n            // Dynamically add extra functions to $button\n            this.enhanceButton($button);\n\n            //Initialize enabled or not\n            if (typeof button.enabled !== 'undefined') {\n                $button.toggleEnable(button.enabled);\n            }\n\n            return $button;\n        },\n        /**\n         * Dynamically add extra functions to $button\n         *\n         * Using '$this' to reference 'this' is just for better readability.\n         *\n         * @param {type} $button\n         * @returns {_L13.BootstrapDialog.prototype}\n         */\n        enhanceButton: function ($button) {\n            $button.dialog = this;\n\n            // Enable / Disable\n            $button.toggleEnable = function (enable) {\n                var $this = this;\n                if (typeof enable !== 'undefined') {\n                    $this.prop(\"disabled\", !enable).toggleClass('disabled', !enable);\n                } else {\n                    $this.prop(\"disabled\", !$this.prop(\"disabled\"));\n                }\n\n                return $this;\n            };\n            $button.enable = function () {\n                var $this = this;\n                $this.toggleEnable(true);\n\n                return $this;\n            };\n            $button.disable = function () {\n                var $this = this;\n                $this.toggleEnable(false);\n\n                return $this;\n            };\n\n            // Icon spinning, helpful for indicating ajax loading status.\n            $button.toggleSpin = function (spin) {\n                var $this = this;\n                var dialog = $this.dialog;\n                var $icon = $this.find('.' + dialog.getNamespace('button-icon'));\n                if (typeof spin === 'undefined') {\n                    spin = !($button.find('.icon-spin').length > 0);\n                }\n                if (spin) {\n                    $icon.hide();\n                    $button.prepend(dialog.createButtonIcon(dialog.getSpinicon()).addClass('icon-spin'));\n                } else {\n                    $icon.show();\n                    $button.find('.icon-spin').remove();\n                }\n\n                return $this;\n            };\n            $button.spin = function () {\n                var $this = this;\n                $this.toggleSpin(true);\n\n                return $this;\n            };\n            $button.stopSpin = function () {\n                var $this = this;\n                $this.toggleSpin(false);\n\n                return $this;\n            };\n\n            return this;\n        },\n        createButtonIcon: function (icon) {\n            var $icon = $('<span></span>');\n            $icon.addClass(this.getNamespace('button-icon')).addClass(icon);\n\n            return $icon;\n        },\n        /**\n         * Invoke this only after the dialog is realized.\n         *\n         * @param {type} enable\n         * @returns {undefined}\n         */\n        enableButtons: function (enable) {\n            $.each(this.indexedButtons, function (id, $button) {\n                $button.toggleEnable(enable);\n            });\n\n            return this;\n        },\n        /**\n         * Invoke this only after the dialog is realized.\n         *\n         * @returns {undefined}\n         */\n        updateClosable: function () {\n            if (this.isRealized()) {\n                // Close button\n                this.getModalHeader().find('.' + this.getNamespace('close-button')).toggle(this.isClosable());\n            }\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'show.bs.modal'.\n         * This is a setter!\n         */\n        onShow: function (onshow) {\n            this.options.onshow = onshow;\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'shown.bs.modal'.\n         * This is a setter!\n         */\n        onShown: function (onshown) {\n            this.options.onshown = onshown;\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'hide.bs.modal'.\n         * This is a setter!\n         */\n        onHide: function (onhide) {\n            this.options.onhide = onhide;\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'hidden.bs.modal'.\n         * This is a setter!\n         */\n        onHidden: function (onhidden) {\n            this.options.onhidden = onhidden;\n\n            return this;\n        },\n        isRealized: function () {\n            return this.realized;\n        },\n        setRealized: function (realized) {\n            this.realized = realized;\n\n            return this;\n        },\n        isOpened: function () {\n            return this.opened;\n        },\n        setOpened: function (opened) {\n            this.opened = opened;\n\n            return this;\n        },\n        handleModalEvents: function () {\n            this.getModal().on('show.bs.modal', {dialog: this}, function (event) {\n                var dialog = event.data.dialog;\n                dialog.setOpened(true);\n                if (dialog.isModalEvent(event) && typeof dialog.options.onshow === 'function') {\n                    var openIt = dialog.options.onshow(dialog);\n                    if (openIt === false) {\n                        dialog.setOpened(false);\n                    }\n\n                    return openIt;\n                }\n            });\n            this.getModal().on('shown.bs.modal', {dialog: this}, function (event) {\n                var dialog = event.data.dialog;\n                dialog.isModalEvent(event) && typeof dialog.options.onshown === 'function' && dialog.options.onshown(dialog);\n            });\n            this.getModal().on('hide.bs.modal', {dialog: this}, function (event) {\n                var dialog = event.data.dialog;\n                dialog.setOpened(false);\n                if (dialog.isModalEvent(event) && typeof dialog.options.onhide === 'function') {\n                    var hideIt = dialog.options.onhide(dialog);\n                    if (hideIt === false) {\n                        dialog.setOpened(true);\n                    }\n\n                    return hideIt;\n                }\n            });\n            this.getModal().on('hidden.bs.modal', {dialog: this}, function (event) {\n                var dialog = event.data.dialog;\n                dialog.isModalEvent(event) && typeof dialog.options.onhidden === 'function' && dialog.options.onhidden(dialog);\n                if (dialog.isAutodestroy()) {\n                    dialog.setRealized(false);\n                    delete BootstrapDialog.dialogs[dialog.getId()];\n                    $(this).remove();\n                }\n                BootstrapDialog.moveFocus();\n            });\n\n            // Backdrop, I did't find a way to change bs3 backdrop option after the dialog is popped up, so here's a new wheel.\n            this.handleModalBackdropEvent();\n\n            // ESC key support\n            this.getModal().on('keyup', {dialog: this}, function (event) {\n                event.which === 27 && event.data.dialog.isClosable() && event.data.dialog.canCloseByKeyboard() && event.data.dialog.close();\n            });\n\n            // Button hotkey\n            this.getModal().on('keyup', {dialog: this}, function (event) {\n                var dialog = event.data.dialog;\n                if (typeof dialog.registeredButtonHotkeys[event.which] !== 'undefined') {\n                    var $button = $(dialog.registeredButtonHotkeys[event.which]);\n                    !$button.prop('disabled') && $button.focus().trigger('click');\n                }\n            });\n\n            return this;\n        },\n        handleModalBackdropEvent: function () {\n            this.getModal().on('click', {dialog: this}, function (event) {\n                $(event.target).hasClass('modal-backdrop') && event.data.dialog.isClosable() && event.data.dialog.canCloseByBackdrop() && event.data.dialog.close();\n            });\n\n            return this;\n        },\n        isModalEvent: function (event) {\n            return typeof event.namespace !== 'undefined' && event.namespace === 'bs.modal';\n        },\n        makeModalDraggable: function () {\n            if (this.options.draggable) {\n                this.getModalHeader().addClass(this.getNamespace('draggable')).on('mousedown', {dialog: this}, function (event) {\n                    var dialog = event.data.dialog;\n                    dialog.draggableData.isMouseDown = true;\n                    var dialogOffset = dialog.getModalDialog().offset();\n                    dialog.draggableData.mouseOffset = {\n                        top: event.clientY - dialogOffset.top,\n                        left: event.clientX - dialogOffset.left\n                    };\n                });\n                this.getModal().on('mouseup mouseleave', {dialog: this}, function (event) {\n                    event.data.dialog.draggableData.isMouseDown = false;\n                });\n                $('body').on('mousemove', {dialog: this}, function (event) {\n                    var dialog = event.data.dialog;\n                    if (!dialog.draggableData.isMouseDown) {\n                        return;\n                    }\n                    dialog.getModalDialog().offset({\n                        top: event.clientY - dialog.draggableData.mouseOffset.top,\n                        left: event.clientX - dialog.draggableData.mouseOffset.left\n                    });\n                });\n            }\n\n            return this;\n        },\n        realize: function () {\n            this.initModalStuff();\n            this.getModal().addClass(BootstrapDialog.NAMESPACE)\n            .addClass(this.getCssClass());\n            this.updateSize();\n            if (this.getDescription()) {\n                this.getModal().attr('aria-describedby', this.getDescription());\n            }\n            this.getModalFooter().append(this.createFooterContent());\n            this.getModalHeader().append(this.createHeaderContent());\n            this.getModalBody().append(this.createBodyContent());\n            this.getModal().data('bs.modal', new BootstrapDialogModal(this.getModal(), {\n                backdrop: 'static',\n                keyboard: false,\n                show: false\n            }));\n            this.makeModalDraggable();\n            this.handleModalEvents();\n            this.setRealized(true);\n            this.updateButtons();\n            this.updateType();\n            this.updateTitle();\n            this.updateMessage();\n            this.updateClosable();\n            this.updateAnimate();\n            this.updateSize();\n            this.updateTabindex();\n\n            return this;\n        },\n        open: function () {\n            !this.isRealized() && this.realize();\n            this.getModal().modal('show');\n\n            return this;\n        },\n        close: function () {\n            !this.isRealized() && this.realize();\n            this.getModal().modal('hide');\n\n            return this;\n        }\n    };\n\n    // Add compatible methods.\n    BootstrapDialog.prototype = $.extend(BootstrapDialog.prototype, BootstrapDialog.METHODS_TO_OVERRIDE[BootstrapDialogModal.getModalVersion()]);\n\n    /**\n     * RFC4122 version 4 compliant unique id creator.\n     *\n     * Added by https://github.com/tufanbarisyildirim/\n     *\n     *  @returns {String}\n     */\n    BootstrapDialog.newGuid = function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    /* ================================================\n     * For lazy people\n     * ================================================ */\n\n    /**\n     * Shortcut function: show\n     *\n     * @param {type} options\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.show = function (options) {\n        return new BootstrapDialog(options).open();\n    };\n\n    /**\n     * Alert window\n     *\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.alert = function () {\n        var alertOptions = {};\n        var defaultAlertOptions = {\n            type: BootstrapDialog.TYPE_PRIMARY,\n            title: null,\n            message: null,\n            closable: false,\n            draggable: false,\n            buttonLabel: BootstrapDialog.DEFAULT_TEXTS.OK,\n            buttonHotkey: null,\n            callback: null\n        };\n\n        if (typeof arguments[0] === 'object' && arguments[0].constructor === {}.constructor) {\n            alertOptions = $.extend(true, defaultAlertOptions, arguments[0]);\n        } else {\n            alertOptions = $.extend(true, defaultAlertOptions, {\n                message: arguments[0],\n                callback: typeof arguments[1] !== 'undefined' ? arguments[1] : null\n            });\n        }\n\n        var dialog = new BootstrapDialog(alertOptions);\n        dialog.setData('callback', alertOptions.callback);\n        dialog.addButton({\n            label: alertOptions.buttonLabel,\n            hotkey: alertOptions.buttonHotkey,\n            action: function (dialog) {\n                if (typeof dialog.getData('callback') === 'function' && dialog.getData('callback').call(this, true) === false) {\n                    return false;\n                }\n                dialog.setData('btnClicked', true);\n\n                return dialog.close();\n            }\n        });\n        if (typeof dialog.options.onhide === 'function') {\n            dialog.onHide(function (dialog) {\n                var hideIt = true;\n                if (!dialog.getData('btnClicked') && dialog.isClosable() && typeof dialog.getData('callback') === 'function') {\n                    hideIt = dialog.getData('callback')(false);\n                }\n                if (hideIt === false) {\n                    return false;\n                }\n                hideIt = this.onhide(dialog);\n\n                return hideIt;\n            }.bind({\n                onhide: dialog.options.onhide\n            }));\n        } else {\n            dialog.onHide(function (dialog) {\n                var hideIt = true;\n                if (!dialog.getData('btnClicked') && dialog.isClosable() && typeof dialog.getData('callback') === 'function') {\n                    hideIt = dialog.getData('callback')(false);\n                }\n\n                return hideIt;\n            });\n        }\n\n        return dialog.open();\n    };\n\n    /**\n     * Confirm window\n     *\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.confirm = function () {\n        var confirmOptions = {};\n        var defaultConfirmOptions = {\n            type: BootstrapDialog.TYPE_PRIMARY,\n            title: null,\n            message: null,\n            closable: false,\n            draggable: false,\n            btnCancelLabel: BootstrapDialog.DEFAULT_TEXTS.CANCEL,\n            btnCancelClass: null,\n            btnCancelHotkey: null,\n            btnOKLabel: BootstrapDialog.DEFAULT_TEXTS.OK,\n            btnOKClass: null,\n            btnOKHotkey: null,\n            btnsOrder: BootstrapDialog.defaultOptions.btnsOrder,\n            callback: null\n        };\n        if (typeof arguments[0] === 'object' && arguments[0].constructor === {}.constructor) {\n            confirmOptions = $.extend(true, defaultConfirmOptions, arguments[0]);\n        } else {\n            confirmOptions = $.extend(true, defaultConfirmOptions, {\n                message: arguments[0],\n                callback: typeof arguments[1] !== 'undefined' ? arguments[1] : null\n            });\n        }\n        if (confirmOptions.btnOKClass === null) {\n            confirmOptions.btnOKClass = ['btn', confirmOptions.type.split('-')[1]].join('-');\n        }\n\n        var dialog = new BootstrapDialog(confirmOptions);\n        dialog.setData('callback', confirmOptions.callback);\n\n        var buttons = [{\n                label: confirmOptions.btnCancelLabel,\n                cssClass: confirmOptions.btnCancelClass,\n                hotkey: confirmOptions.btnCancelHotkey,\n                action: function (dialog) {\n                    if (typeof dialog.getData('callback') === 'function' && dialog.getData('callback').call(this, false) === false) {\n                        return false;\n                    }\n\n                    return dialog.close();\n                }\n            }, {\n                label: confirmOptions.btnOKLabel,\n                cssClass: confirmOptions.btnOKClass,\n                hotkey: confirmOptions.btnOKHotkey,\n                action: function (dialog) {\n                    if (typeof dialog.getData('callback') === 'function' && dialog.getData('callback').call(this, true) === false) {\n                        return false;\n                    }\n\n                    return dialog.close();\n                }\n            }];\n        if (confirmOptions.btnsOrder === BootstrapDialog.BUTTONS_ORDER_OK_CANCEL) {\n            buttons.reverse();\n        }\n        dialog.addButtons(buttons);\n\n        return dialog.open();\n\n    };\n\n    /**\n     * Warning window\n     *\n     * @param {type} message\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.warning = function (message, callback) {\n        return new BootstrapDialog({\n            type: BootstrapDialog.TYPE_WARNING,\n            message: message\n        }).open();\n    };\n\n    /**\n     * Danger window\n     *\n     * @param {type} message\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.danger = function (message, callback) {\n        return new BootstrapDialog({\n            type: BootstrapDialog.TYPE_DANGER,\n            message: message\n        }).open();\n    };\n\n    /**\n     * Success window\n     *\n     * @param {type} message\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.success = function (message, callback) {\n        return new BootstrapDialog({\n            type: BootstrapDialog.TYPE_SUCCESS,\n            message: message\n        }).open();\n    };\n\n    return BootstrapDialog;\n\n}));\n"]}