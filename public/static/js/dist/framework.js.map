{"version":3,"sources":["wrap-start.js","pager.js","loader.js"],"names":["$","fn","extend","pagination","applyParams","defaultParams","page","perPage","dataCount","perCount","url","callback","itemParam","matchResultArr","location","href","toString","match","length","maxPage","parseInt","halfPerPage","pagerHtml","i","j","this","html","find","eq","addClass","last","each","$this_a","parent","click","hasClass","clickPage","pageData","hrefUrl","replace","indexOf","loader","args","loaderHtml","$block","append","after","remove"],"mappings":"CAAA,YCCA,WACAA,EAAAC,GAAAC,QACAC,WAAA,SAAAC,GACA,GAAAC,IACAC,KAAA,GACAC,QAAA,EAEAC,UAAA,EACAC,SAAA,GACAC,IAAA,GACAC,SAAA,KAEA,KAAA,GAAAC,KAAAR,GACAC,EAAAO,GAAAR,EAAAQ,EAIA,IAAA,IAAAP,EAAAC,KAAA,CACA,GAAAO,GAAAC,SAAAC,KAAAC,WAAAC,MAAA,gBACAJ,IAAAA,EAAAK,OAAA,EACAb,EAAAC,KAAAO,EAAA,GAEAR,EAAAC,KAAA,EAKA,GAAAa,GAAAC,SAAAf,EAAAG,UAAAH,EAAAI,WAAAJ,EAAAG,UAAAH,EAAAI,SAAA,EAAA,GAGAY,EAAAD,SAAAf,EAAAE,QAAA,GAEAe,EAAA,EAKA,IAJAA,GAAA,wCACAA,GAAA,0BACAA,GAAA,2BAEAH,GAAAd,EAAAE,QACA,IAAA,GAAAgB,GAAA,EAAAA,GAAAJ,EAAAI,IACAD,GAAA,WAAAC,EAAA,gBAGA,IAAAlB,EAAAC,MAAAe,EACA,IAAA,GAAAE,GAAA,EAAAA,GAAAlB,EAAAE,QAAAgB,IACAD,GAAA,WAAAC,EAAA,gBAGA,IAAAJ,EAAAd,EAAAC,MAAAe,EACA,IAAA,GAAAE,GAAA,EAAAC,EAAAL,EAAAd,EAAAE,QAAAiB,GAAAL,EAAAI,IAAAC,IACAF,GAAA,WAAAE,EAAA,gBAGA,KAAA,GAAAD,GAAA,EAAAC,EAAAnB,EAAAC,KAAAe,EAAAE,GAAAlB,EAAAE,QAAAgB,IAAAC,IACAF,GAAA,WAAAE,EAAA,WAMAF,IAAA,2BACAA,GAAA,QACAA,GAAA,SAEAtB,EAAAyB,MAAAC,KAAAJ,GAEA,GAAAjB,EAAAC,MACAN,EAAAyB,MAAAE,KAAA,MAAAC,GAAA,GAAAC,SAAA,YAGAxB,EAAAC,MAAAa,GACAnB,EAAAyB,MAAAE,KAAA,MAAAG,OAAAD,SAAA,YAIA7B,EAAAyB,MAAAE,KAAA,KAAAI,KAAA,WACA,GAAAC,GAAAhC,EAAAyB,KACAO,GAAAN,QAAArB,EAAAC,KAAA,IACA0B,EAAAC,SAAAJ,SAAA,YAKA7B,EAAAyB,MAAAE,KAAA,KAAAI,KAAA,WACA/B,EAAAyB,MACAS,MAAA,WAGA,IAAAlC,EAAAyB,MAAAQ,SAAAE,SAAA,YAAA,CAIA,GAAAC,GAAApC,EAAAyB,MAAAC,MAGA,IAAA,kBAAArB,GAAAM,SAAA,CACA,GAAA0B,KAGA,OAFAA,GAAA/B,KAAA8B,MACA/B,GAAAM,SAAA0B,GAYA,GAPA,KAAArC,EAAAyB,MAAAC,QAAA,WAAA1B,EAAAyB,MAAAC,OACAU,EAAA,EACA,KAAApC,EAAAyB,MAAAC,QAAA,WAAA1B,EAAAyB,MAAAC,SACAU,EAAAjB,GAIAL,SAAAC,KAAAC,WAAAC,MAAA,eACA,GAAAqB,GAAAxB,SAAAC,KAAAC,WAAAuB,QAAA,cAAA,QAAAH,OAEA,IAAAE,GAAAxB,SAAAC,KAAAyB,QAAA,KAAA,EAAA1B,SAAAC,KAAA,SAAAqB,EAAAtB,SAAAC,KAAA,SAAAqB,CAEApC,GAAAyC,QAAA,GACA3B,SAAAC,KAAAuB,aCnHA,WACAtC,EAAAE,OAAAF,GACAyC,OAAA,SAAAC,GACA,GAAA,GAAAA,EAAA,CACA,GACAC,GAAA,8CACAA,IAAA,8CACAA,GAAA,QAEA,IAAAC,GAAA5C,EAAA,sDACA4C,GAAAC,OANA,oDAOAD,EAAAC,OAAAF,GAEA3C,EAAA,QAAA8C,MAAAF,OAEA5C,GAAA,iBAAA+C","file":"framework.js","sourcesContent":["(function(){\n","// 分页插件\n(function(){\n    $.fn.extend({\n        pagination: function(applyParams){\n            var defaultParams = {\n                page: '', // 当前页数 不传的话会取得url中的page=xx\n                perPage: 9, // 显示出来的分页按钮数 必须是单数\n                //maxPage: 90, // 最大页数\n                dataCount: 1, // 最大数据数\n                perCount: 20, // 最大每页数据量\n                url: '', // 未使用\n                callback: null\n            };\n            for(var itemParam in applyParams){\n                defaultParams[itemParam] = applyParams[itemParam];\n            }\n\n            // 当前页码 如果没有传入则通过url来获取\n            if(defaultParams.page == ''){\n                var matchResultArr = location.href.toString().match(/page=([0-9]+)/);\n                if(matchResultArr && matchResultArr.length > 0){\n                    defaultParams.page = matchResultArr[1];\n                }else{\n                    defaultParams.page = 1;\n                }\n            }\n\n            // 最大页数\n            var maxPage = parseInt(( defaultParams.dataCount / defaultParams.perCount )) + ((defaultParams.dataCount % defaultParams.perCount) ? 1 : 0);\n\n            // 页数的一半\n            var halfPerPage = parseInt(defaultParams.perPage / 2);\n\n            var pagerHtml = '';\n            pagerHtml += '<div class=\"common-pager text-right\">';\n            pagerHtml += '<ul class=\"pagination\">';\n            pagerHtml += '<li><a >&laquo;</a></li>';\n\n            if(maxPage <= defaultParams.perPage){ //如果总页数小于5 即直接显示 1 至 总页数\n                for (var i = 1; i <= maxPage; i++) {\n                    pagerHtml += ('<li><a >' + i + '</a></li>');\n                }\n            }else{\n                if(defaultParams.page <= halfPerPage){ //如果当前页小于3 即处于总页的开头 则是显示 1 2 3 4 5\n                    for (var i = 1; i <= defaultParams.perPage; i++) {\n                        pagerHtml += ('<li><a >' + i + '</a></li>');\n                    }\n                }else{\n                    if((maxPage - defaultParams.page) <= halfPerPage){ //如果当前页位于最后几页 则是显示 倒数的几页\n                        for (var i = 1, j = maxPage - defaultParams.perPage; j <= maxPage; i++, j++) {\n                            pagerHtml += ('<li><a >' + j + '</a></li>');\n                        }\n                    }else{ //这里是处于中间 则显示从当前页的前2页开始到后2页\n                        for (var i = 1, j = defaultParams.page - halfPerPage; i <= defaultParams.perPage; i++, j++) {\n                            pagerHtml += ('<li><a >' + j + '</a></li>');\n                        }\n                    }\n                }\n            }\n\n            pagerHtml += '<li><a >&raquo;</a></li>';\n            pagerHtml += '</ul>';\n            pagerHtml += '</div>';\n\n            $(this).html(pagerHtml);\n\n            if(defaultParams.page == 1){\n                $(this).find('li').eq(0).addClass('disabled');\n            }\n\n            if(defaultParams.page == maxPage){\n                $(this).find('li').last().addClass('disabled');\n            }\n\n            //为当前页添加active状态\n            $(this).find('a').each(function () {\n                var $this_a = $(this);\n                if ($this_a.html() == (defaultParams.page + \"\")) {\n                    $this_a.parent().addClass('active');\n                }\n            });\n\n            // 点击换页\n            $(this).find('a').each(function () {\n                var $this_a = $(this);\n                $this_a.click(function(){\n\n                    // 如果他的父级存在不可用标识 则退出\n                    if($(this).parent().hasClass('disabled')){\n                        return;\n                    }\n\n                    var clickPage = $(this).html();\n\n                    // 如果有回调参数 优先使用回调参数\n                    if(typeof defaultParams.callback == 'function'){\n                        var pageData = {};\n                        pageData.page = clickPage;\n                        defaultParams.callback(pageData);\n                        return;\n                    }\n\n                    // 判断点击第一页还是最后一页\n                    if($(this).html() == '«' || $(this).html() == '&laquo;'){\n                        clickPage = 1;\n                    }else if($(this).html() == '»' || $(this).html() == '&raquo;'){\n                        clickPage = maxPage;\n                    }\n\n                    // 根据正则匹配替换当前url中的 page=xx或者追加page=xx\n                    if(location.href.toString().match(/page=[0-9]+/)){\n                        var hrefUrl = location.href.toString().replace(/page=[0-9]+/, 'page=' + clickPage);\n                    }else{\n                        var hrefUrl = location.href.indexOf('?') > 0 ? location.href + '&page=' + clickPage : location.href + '?page=' + clickPage;\n                    }\n                    $.loader(true);\n                    location.href = hrefUrl;\n                });\n            });\n        }\n    });\n})();","// 加载动画插件\n(function(){\n    $.extend($,{\n        loader: function(args){\n            if(args == true){\n                var loaderMask = '<div id=\"loader_mask\" class=\"loader-mask\"></div>';\n                var loaderHtml = '<div id=\"loader_panel\" class=\"loader-panel\">';\n                loaderHtml += '<i class=\"fa fa-spinner fa-spin fa-3x\"></i>';\n                loaderHtml +='</div>';\n\n                var $block = $('<div id=\"loader_block\" class=\"common-loader\"></div>');\n                $block.append(loaderMask);\n                $block.append(loaderHtml);\n\n                $('body').after($block);\n            }else{\n                $(\"#loader_block\").remove();\n            }\n        }\n    });\n})();"]}